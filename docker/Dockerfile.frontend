# Base stage
FROM node:20-alpine as base

# Set work directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY frontend/package*.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Development stage
FROM node:20-alpine as development

WORKDIR /app

# Copy package files
COPY frontend/package*.json ./

# Install all dependencies (including dev dependencies)
RUN npm install

# In development mode, we don't need to copy project files
# as they will be mounted as a volume

# Expose port
EXPOSE 3000

# Default command is for development mode with hot-reloading
CMD ["npm", "run", "dev"]

# Production build stage
FROM node:20-alpine as build

WORKDIR /app

# Copy package files
COPY frontend/package*.json ./

# Install ALL dependencies (including dev dependencies for building)
RUN npm ci && npm cache clean --force

# Copy source code
COPY frontend/ .

# Accept build arguments
ARG API_BASE_URL=https://fitforty.schlunsen.com/api
ARG NODE_ENV=production

# Set environment variables for build
ENV API_BASE_URL=${API_BASE_URL}
ENV NODE_ENV=${NODE_ENV}

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine as production

# Copy built application from build stage (Nuxt 3 builds to .output/public)
COPY --from=build /app/.output/public /usr/share/nginx/html

# Copy custom nginx config if needed
# COPY nginx/nginx.conf /etc/nginx/conf.d/default.conf

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]