services:
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=workout_db
      - POSTGRES_USER=workout_user
      - POSTGRES_PASSWORD=workout_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U workout_user -d workout_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    volumes:
      - ./backend:/app  # Mount only the backend directory for live code reloading
      - static_volume:/app/static
      - media_volume:/app/media
      - /app/venv/  # Exclude venv directory from mounting
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DEBUG=True  # Set to True for easier debugging
      - SECRET_KEY=change_me_in_production
      - DB_NAME=workout_db
      - DB_USER=workout_user
      - DB_PASSWORD=workout_password
      - DB_HOST=db
      - DB_PORT=5432
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,0.0.0.0
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://frontend:3000,http://localhost,http://localhost:80
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - LOAD_SAMPLE_DATA=True  # Load sample exercises
    restart: always
    ports:
      - "8000:8000"  # Expose Django directly for debugging
    command: python manage.py runserver 0.0.0.0:8000  # Use Django development server instead of Gunicorn

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
      target: development
    volumes:
      - ./frontend:/app  # Mount frontend directory for live code reloading
      - /app/node_modules/  # Exclude node_modules from mounting
    depends_on:
      - backend
    environment:
      - API_BASE_URL=http://localhost/api
      - HOST=0.0.0.0  # Allow connections from outside the container
    restart: always
    ports:
      - "3000:3000"  # Expose Nuxt directly for debugging
    command: npm run dev  # Run Nuxt in development mode with hot reloading

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/static
      - media_volume:/media
    depends_on:
      - backend
      - frontend
    restart: always

volumes:
  postgres_data:
  static_volume:
  media_volume: