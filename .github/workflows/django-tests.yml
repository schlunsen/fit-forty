name: Django Tests

on:
  push:
    branches: [ main, chore/*, feature/*, bugfix/* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: workout_user
          POSTGRES_PASSWORD: workout_password
          POSTGRES_DB: workout_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        # Install test dependencies
        pip install pytest pytest-django pytest-cov
    
    - name: Run Django tests
      env:
        DEBUG: 'True'
        SECRET_KEY: 'test-secret-key'
        DB_NAME: workout_db
        DB_USER: workout_user
        DB_PASSWORD: workout_password
        DB_HOST: localhost
        DB_PORT: 5432
        ALLOWED_HOSTS: 'localhost,127.0.0.1'
        CORS_ALLOWED_ORIGINS: 'http://localhost:3000,http://127.0.0.1:3000'
      run: |
        cd backend
        python manage.py test
    
    - name: Run tests with coverage
      env:
        DEBUG: 'True'
        SECRET_KEY: 'test-secret-key'
        DB_NAME: workout_db
        DB_USER: workout_user
        DB_PASSWORD: workout_password
        DB_HOST: localhost
        DB_PORT: 5432
        ALLOWED_HOSTS: 'localhost,127.0.0.1'
        CORS_ALLOWED_ORIGINS: 'http://localhost:3000,http://127.0.0.1:3000'
      run: |
        cd backend
        pytest --cov=. --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        fail_ci_if_error: false